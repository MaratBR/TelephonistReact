{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:react/recommended",
        "airbnb",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint"
    ],
    "rules": {
        "react/react-in-jsx-scope": "off",
        "no-underscore-dangle": "off",
        "no-unused-vars": "warn",
        "import/prefer-default-export": "off",
        "react/jsx-props-no-spreading": "off",
        "no-restricted-syntax": [
            "error",
            {
                "selector": "ForInStatement",
                "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
            },
            {
                "selector": "LabeledStatement",
                "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
            },
            {
                "selector": "WithStatement",
                "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
            }
        ],
        "import/extensions": [
            "error",
            "ignorePackages",
            {
              "js": "never",
              "jsx": "never",
              "ts": "never",
              "tsx": "never"
            }
        ],
        "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
        "react/require-default-props": "off",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": "error",
        "jsx-a11y/click-events-have-key-events": "off",
        "quotes": "off",
        "camelcase": "off",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "class-methods-use-this": "warn",
        "prettier/prettier": [
            "error",
            {
                "singleQuote": true,
                "bracketSpacing": true
            }
        ]
    },
    "globals": {
        "React": "readonly",
        "JSX": "readonly",
        "logging": "readonly"
    },
    "settings": {
        "import/resolver": {
            "typescript": {}
        }
    }
}

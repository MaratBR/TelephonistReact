{
	// Place your TelephonistReact workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React translation hook": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "thook",
		"body": [
			"const { ${1:t} } = useTranslation()"
		]
	},
	"Import scss module": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "scssm",
		"body": [
			"import ${1:S} from './$TM_FILENAME_BASE.module.scss';"
		]
	},
	"Function component with props type": {
		"scope": "typescriptreact",
		"prefix": "fcp",
		"body": [
			"type ${0}Props = {",
			"\t",
			"}",
			"",
			"function ${0}(props: ${0}Props) {",
			"\treturn (",
			"\t\t",
			"\t);",
			"}"
		]
	},
	"Function component file with props type": {
		"scope": "typescriptreact",
		"prefix": "ffcp",
		"body": [
			"type ${0:$TM_FILENAME_BASE}Props = {",
			"\t",
			"}",
			"",
			"function ${0:$TM_FILENAME_BASE}(props: ${0:$TM_FILENAME_BASE}Props) {",
			"\treturn (",
			"\t\t",
			"\t);",
			"}",
			"",
			"export default ${0:$TM_FILENAME_BASE};"
		]
	},
	"Function component with props type and translation": {
		"scope": "typescriptreact",
		"prefix": "ffcpt",
		"body": [
			"import { useTranslation } from \"react-i18next\";",
			"type ${0:$TM_FILENAME_BASE}Props = {",
			"\t",
			"}",
			"",
			"function ${0:$TM_FILENAME_BASE}(props: ${0:$TM_FILENAME_BASE}Props) {",
			"\tconst { t } = useTranslation();",
			"\treturn (",
			"\t\t",
			"\t);",
			"}",
			"",
			"export default ${0:$TM_FILENAME_BASE};"
		]
	}
}